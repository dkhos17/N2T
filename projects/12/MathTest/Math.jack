// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array pow2;
    /** Initializes the library. */
    function void init() {
        let pow2 = Array.new(16);
        let pow2[0] = 1;
        let pow2[1] = 2;
        let pow2[2] = 4;
        let pow2[3] = 8;
        let pow2[4] = 16;
        let pow2[5] = 32;
        let pow2[6] = 64;
        let pow2[7] = 128;
        let pow2[8] = 256;
        let pow2[9] = 512;
        let pow2[10] = 1024;
        let pow2[11] = 2048;
        let pow2[12] = 4096;
        let pow2[13] = 8192;
        let pow2[14] = 16384;
        let pow2[15] = 16384+16384;
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if(x < 0) { return -x; }
        return x;
    }

    /** Return i-th bit of x. */
    function int bit(int x, int i) {
        if((x & pow2[i]) = 0) { return 0; }
        return 1;
    }

    /* Returns 2 power by x */
    function int powerOfTwo(int x) {
        return pow2[x];
    } 

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int i, sum;
        let i = 0; let sum = 0;
        while(i < 16) {
            if(Math.bit(y, i) = 1) {
                let sum = sum + x;
            }
            let x = x + x; let i=i+1;
        }
        return sum;        
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int q;
        var bool sign;
        let sign = ((x > 0) = (y > 0));
        let x = Math.abs(x);
        let y = Math.abs(y);
        if((y > x) | (y < 0)) { return 0; }
        let q = Math.divide(x, 2*y);
        if((x-(2*q*y)) < y) {
            let q = q+q;
        }else {
            let q = q+q+1;
        }
        if(~sign) {let q = -q;}
        return q;
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int y, j, i;
        let y = 0; let j = 8;
        while(j > -1) {
            let i = y + pow2[j];
            if((~((i*i) > x)) & ((i*i) > 0)){
                let y = i;
            }
            let j=j-1;
        }
        return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if(a > b) { return a; }
        return b;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if(a < b) { return a; }
        return b;
    }
}
